#!/bin/bash

contrib=$(dirname "$0")
test -n "$contrib" -a -d "$contrib" || (echo "Could not find the contrib/ directory" && exit 1)
pushd "$contrib"
contrib=`pwd`  # get abs path
. "$contrib"/base.sh || (echo "Could not source contrib/base.sh" && exit 1)

set -e

which git || fail "Git is required to proceed"

info "Refreshing submodules..."
git submodule init
git submodule update

info "Building libzbar..."
LIBZBAR_VERSION="1d51925e6cc9151f4a73781989f21fcd7b57ef32" # version 0.23

pushd "$contrib"/zbar || fail "Could not chdir to ${contrib}/zbar"
git checkout $LIBZBAR_VERSION || fail "Could not check out zbar $LIBZBAR_VERSION"
git clean -dfxq
autoreconf -vfi || fail "Could not run autoreconf for zbar. Please make sure you have automake and libtool installed, and try again."
./configure \
    --with-x=no \
    --enable-pthread=no \
    --enable-doc=no \
    --enable-video=no \
    --with-jpeg=no \
    --with-python=no \
    --with-gtk=no \
    --with-qt=no \
    --with-java=no \
    --with-imagemagick=no \
    --with-dbus=no \
    --enable-codes=qrcode \
    --disable-static \
    --enable-shared || fail "Could not configure zbar. Please make sure you have a C compiler installed and try again."
make -j4 || fail "Could not build zbar"
uname=`uname -s`
if [ "$uname" = "Darwin" ]; then
    libzbar_lib="libzbar.0.dylib"
elif [ "$uname" = "Linux" ]; then
    libzbar_lib="libzbar.so.0"
else
    fail "Unknown OS! Please manually copy the library produced in .libs/ and put it in the ../../lib folder (top level folder)"
fi
cp -fpv zbar/.libs/$libzbar_lib ../../lib || fail "Could not copy the zbar binary to its destination"
git checkout master  # Undo the previous explicit checkout to this hash
git clean -dfxq
popd

info "$libzbar_lib has been placed in the vilight 'lib' folder."

popd
